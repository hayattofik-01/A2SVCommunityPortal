// Mocks generated by Mockito 5.4.0 from annotations
// in a2sv_community_portal_mobile/test/features/authentication/data/repository/login_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:a2sv_community_portal_mobile/core/network/network_info.dart'
    as _i6;
import 'package:a2sv_community_portal_mobile/features/authentication/data/datasource/login_local_datasource.dart'
    as _i7;
import 'package:a2sv_community_portal_mobile/features/authentication/data/datasource/login_remote_datasource.dart'
    as _i3;
import 'package:a2sv_community_portal_mobile/features/authentication/domain/entities/login.dart'
    as _i2;
import 'package:a2sv_community_portal_mobile/features/authentication/domain/entities/registration_payload.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogin_0 extends _i1.SmartFake implements _i2.Login {
  _FakeLogin_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRemoteDataSource extends _i1.Mock
    implements _i3.LoginRemoteDataSource {
  MockLoginRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Login> loginUser(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.Login>.value(_FakeLogin_0(
          this,
          Invocation.method(
            #loginUser,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Login>);
  @override
  _i4.Future<_i2.Login> registerUser(_i5.RegistrationPayload? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.Login>.value(_FakeLogin_0(
          this,
          Invocation.method(
            #registerUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.Login>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [LoginLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginLocalDataSource extends _i1.Mock
    implements _i7.LoginLocalDataSource {
  MockLoginLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Login> getLastToken() => (super.noSuchMethod(
        Invocation.method(
          #getLastToken,
          [],
        ),
        returnValue: _i4.Future<_i2.Login>.value(_FakeLogin_0(
          this,
          Invocation.method(
            #getLastToken,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Login>);
  @override
  _i4.Future<void> cacheToken(_i2.Login? login) => (super.noSuchMethod(
        Invocation.method(
          #cacheToken,
          [login],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
